/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package tela;

import DAO.PessoaDAO;
import apoio.Automatizar;
import apoio.Formatacao;
import entidade.Pessoa;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author artur
 */
public class IfrPessoa extends javax.swing.JInternalFrame {

    ArrayList<Pessoa> pessoas = new ArrayList<>();
    Pessoa pessoaSelecionada = null;

    /**
     * Creates new form IfrPessoa
     */
    public IfrPessoa() {
        initComponents();

        popularTabelaPessoa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TbpPessoa = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPessoa = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        TxtFiltroNome = new javax.swing.JTextField();
        TxtFiltroApelido = new javax.swing.JTextField();
        btnLiparFiltro = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tffTelefone = new javax.swing.JFormattedTextField();
        tfdEmail = new javax.swing.JTextField();
        tfdApelido = new javax.swing.JTextField();
        tfdNome = new javax.swing.JTextField();
        BtnBuscar = new javax.swing.JButton();
        BtnEditar = new javax.swing.JButton();
        BtnSalvar = new javax.swing.JButton();
        BtnFechar = new javax.swing.JButton();
        BtnExcluir = new javax.swing.JButton();

        setTitle("Pessoa");

        TbpPessoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TbpPessoaMouseClicked(evt);
            }
        });

        tblPessoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Apelido", "Telefone", "e-mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPessoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPessoaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPessoa);
        if (tblPessoa.getColumnModel().getColumnCount() > 0) {
            tblPessoa.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblPessoa.getColumnModel().getColumn(1).setPreferredWidth(10);
            tblPessoa.getColumnModel().getColumn(2).setPreferredWidth(20);
            tblPessoa.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        jLabel11.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel11.setText("Filtros:");

        jLabel12.setText("Nome:");

        jLabel13.setText("Apelido:");

        btnLiparFiltro.setIcon(new javax.swing.ImageIcon("D:\\PARTICULAR\\FACULDADE\\2023\\2023A2\\PROJETO INTEGRADOR - DESENVOLVIMENTO DE APLICAÇÕES - REF 348259\\Icones\\broom.png")); // NOI18N
        btnLiparFiltro.setText("Limpar");
        btnLiparFiltro.setToolTipText("");
        btnLiparFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLiparFiltroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(TxtFiltroApelido, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLiparFiltro))
                            .addComponent(TxtFiltroNome, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(TxtFiltroNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtFiltroApelido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLiparFiltro)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)))
                .addContainerGap())
        );

        TbpPessoa.addTab("Listagem", jPanel1);

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel1.setText("Nova Pessoa");

        jLabel2.setText("Nome:");

        jLabel3.setText("Apelido:");

        jLabel4.setText("e-mail:");

        jLabel5.setText("Telefone:");

        try {
            tffTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) # ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tffTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tffTelefoneFocusLost(evt);
            }
        });

        tfdEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfdEmailFocusLost(evt);
            }
        });

        tfdApelido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfdApelidoFocusLost(evt);
            }
        });

        tfdNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfdNomeFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfdNome, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfdApelido, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfdEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tffTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1)))
                .addContainerGap(282, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfdNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfdApelido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfdEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tffTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(111, Short.MAX_VALUE))
        );

        TbpPessoa.addTab("Cadastro", jPanel2);

        BtnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/loupe.png"))); // NOI18N
        BtnBuscar.setText("Buscar");
        BtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarActionPerformed(evt);
            }
        });

        BtnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pencil.png"))); // NOI18N
        BtnEditar.setText("Editar");
        BtnEditar.setEnabled(false);
        BtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditarActionPerformed(evt);
            }
        });

        BtnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add-file.png"))); // NOI18N
        BtnSalvar.setText("Salvar");
        BtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalvarActionPerformed(evt);
            }
        });

        BtnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cross.png"))); // NOI18N
        BtnFechar.setText("Fechar");
        BtnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnFecharActionPerformed(evt);
            }
        });

        BtnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/trash-bin.png"))); // NOI18N
        BtnExcluir.setText("Excluir");
        BtnExcluir.setEnabled(false);
        BtnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TbpPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(BtnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnFechar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TbpPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnBuscar)
                    .addComponent(BtnSalvar)
                    .addComponent(BtnFechar)
                    .addComponent(BtnEditar)
                    .addComponent(BtnExcluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_BtnFecharActionPerformed

    private void BtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalvarActionPerformed
        String msg = "Confirmar atualização de pessoa?";
        if (pessoaSelecionada == null) {
            msg = "Confirmar cadastro de pessoa?";
        }

        if (verificarCampos()) {
            JOptionPane.showMessageDialog(this, Formatacao.mensagemErroPreenchimento());
        } else {
            if (JOptionPane.showConfirmDialog(this, msg, "Confirmação", JOptionPane.YES_NO_OPTION) == 0) {
                salvar();
                popularTabelaPessoa();
            }
        }

    }//GEN-LAST:event_BtnSalvarActionPerformed

    private void TbpPessoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbpPessoaMouseClicked
        alternarBotoes();
        if (TbpPessoa.getSelectedIndex() == 1) {
            alteraBotoesUpdate(false);
        }
    }//GEN-LAST:event_TbpPessoaMouseClicked

    private void BtnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExcluirActionPerformed
        int index = tblPessoa.getSelectedRow();
        int id = pessoas.get(index).getId();

        if (JOptionPane.showConfirmDialog(this, "Confirmar exclusão de Pessoa?", "Confirmação", JOptionPane.YES_NO_OPTION) == 0) {
            if (new PessoaDAO().excluir(id) == null) {
                popularTabelaPessoa();
                JOptionPane.showMessageDialog(this, "Pessoa excluída com sucesso!");
            } else {
                JOptionPane.showConfirmDialog(this, "Erro ao excluir pessoa.");
            }
        }
    }//GEN-LAST:event_BtnExcluirActionPerformed

    private void BtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarActionPerformed
        popularTabelaPessoa();
    }//GEN-LAST:event_BtnBuscarActionPerformed

    private void BtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditarActionPerformed
        prepararParaEdicao();
    }//GEN-LAST:event_BtnEditarActionPerformed

    private void tblPessoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPessoaMouseClicked
        if (tblPessoa.getSelectedRow() > -1) {
            alteraBotoesUpdate(true);
        } else {
            alteraBotoesUpdate(false);
        }
    }//GEN-LAST:event_tblPessoaMouseClicked

    private void tfdNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdNomeFocusLost
        Automatizar.nome(tfdNome, false);
    }//GEN-LAST:event_tfdNomeFocusLost

    private void tfdApelidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdApelidoFocusLost
        Automatizar.nome(tfdApelido, true);
    }//GEN-LAST:event_tfdApelidoFocusLost

    private void tfdEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdEmailFocusLost
        Automatizar.email(tfdEmail, true);
    }//GEN-LAST:event_tfdEmailFocusLost

    private void tffTelefoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tffTelefoneFocusLost
        Automatizar.telefone(tffTelefone, false);
    }//GEN-LAST:event_tffTelefoneFocusLost

    private void btnLiparFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLiparFiltroActionPerformed
        limparFilrosPessoa();
        popularTabelaPessoa();
    }//GEN-LAST:event_btnLiparFiltroActionPerformed

    private void popularTabelaPessoa() {
        preencherArrayPessoas();

        //mostrar dados na tabela
        Object[] cabecalho = {
            "Nome",
            "Apelido",
            "e-mail",
            "Telefone"
        };

        DefaultTableModel model = new DefaultTableModel(cabecalho, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        for (Pessoa pessoa : pessoas) {
            Object[] row = {
                pessoa.getNome(),
                pessoa.getApelido(),
                pessoa.getEmail(),
                pessoa.getTelefone()
            };

            model.addRow(row);
        }

        tblPessoa.setModel(model);
        tblPessoa.setSelectionMode(0);

        TableColumn coluna = null;
        for (int i = 0; i < tblPessoa.getColumnCount(); i++) {
            coluna = tblPessoa.getColumnModel().getColumn(i);
            coluna.setResizable(false);

            switch (i) {
                case 0:
                    coluna.setMaxWidth(400);
                    break;
                case 1:
                    coluna.setMaxWidth(150);
                    break;
                case 2:
                    coluna.setMaxWidth(300);
                    break;
                case 3:
                    coluna.setMaxWidth(150);
                    break;
            }
        }
    }

    public void focoListagem() {
        TbpPessoa.setSelectedIndex(0);
        alternarBotoes();
    }

    public void focoCadastro() {
        TbpPessoa.setSelectedIndex(1);
        alternarBotoes();
    }

    private void alternarBotoes() {
        BtnBuscar.setEnabled(TbpPessoa.getSelectedIndex() == 0);
        BtnSalvar.setEnabled(TbpPessoa.getSelectedIndex() == 1);
    }

    private void salvar() {
        Pessoa pessoa = criarEntidade();
        if (pessoaSelecionada == null) {
            if (new PessoaDAO().salvar(pessoa) == null) {
                limparFormularioCadastro();
                popularTabelaPessoa();
                TbpPessoa.setSelectedIndex(0);
                alteraBotoesUpdate(false);
                alternarBotoes();
                JOptionPane.showMessageDialog(this, "Pessoa cadastrada com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao cadastrar Pessoa.");
            }
        } else {
            if (new PessoaDAO().atualizar(pessoa) == null) {
                limparFormularioCadastro();
                pessoaSelecionada = null;
                popularTabelaPessoa();
                TbpPessoa.setSelectedIndex(0);
                alteraBotoesUpdate(false);
                alternarBotoes();
                JOptionPane.showMessageDialog(this, "Pessoa alterada com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao alterar Pessoa.");
            }
        }
    }

    private Pessoa criarEntidade() {
        String nome = tfdNome.getText();
        String apelido = tfdApelido.getText();
        String email = tfdEmail.getText();
        String telefone = tffTelefone.getText();

        if (pessoaSelecionada == null) {
            return new Pessoa(nome, apelido, email, telefone);
        } else {
            return new Pessoa(pessoaSelecionada.getId(), nome, apelido, email, telefone);
        }
    }

    private void limparFormularioCadastro() {
        tfdNome.setText("");
        tfdApelido.setText("");
        tfdEmail.setText("");
        tffTelefone.setText("");

        tfdNome.setBackground(Formatacao.colorNeutral());
        tfdApelido.setBackground(Formatacao.colorNeutral());
        tfdEmail.setBackground(Formatacao.colorNeutral());
        tffTelefone.setBackground(Formatacao.colorNeutral());

        tfdNome.requestFocus();
    }

    private String gerarDMLPessoa() {
        String filtroNome = TxtFiltroNome.getText();
        String filtroApelido = TxtFiltroApelido.getText();

        String dml = "SELECT * FROM pessoa WHERE id > 0 ";

        if (filtroNome.length() > 0) {
            String add = "AND nome ILIKE '%" + filtroNome + "%' ";
            dml = dml + add;
        }

        if (filtroApelido.length() > 0) {
            String add = "AND apelido ILIKE '%" + filtroApelido + "%' ";
            dml = dml + add;
        }

        dml = dml + "ORDER BY nome;";

        System.out.println("DML Pessoa: " + dml);

        return dml;
    }

    private void preencherArrayPessoas() {
        pessoas = new PessoaDAO().consultar(gerarDMLPessoa());
    }

    private void limparFilrosPessoa() {
        TxtFiltroNome.setText("");
        TxtFiltroApelido.setText("");
    }

    private void alteraBotoesUpdate(boolean setTo) {
        BtnEditar.setEnabled(setTo);
        BtnExcluir.setEnabled(setTo);
    }

    private void prepararParaEdicao() {
        //pegar pessoa selecionada (em tempo real)
        int index = tblPessoa.getSelectedRow();
        pessoaSelecionada = new PessoaDAO().consultarId(pessoas.get(index).getId());

        //preencher cadastro com dados obtidos
        tfdNome.setText(pessoaSelecionada.getNome());
        tfdApelido.setText(pessoaSelecionada.getApelido());
        tfdEmail.setText(pessoaSelecionada.getEmail());
        tffTelefone.setText(pessoaSelecionada.getTelefone());

        //mudar para aba cadastro
        TbpPessoa.setSelectedIndex(1);
        tfdNome.requestFocus();

        alternarBotoes();
    }

    private boolean verificarCampos() {
        Automatizar.nome(tfdNome, false);
        Automatizar.nome(tfdApelido, true);
        Automatizar.email(tfdEmail, true);
        Automatizar.telefone(tffTelefone, false);

        return (Automatizar.nome(tfdNome, false)
                || Automatizar.nome(tfdApelido, true)
                || Automatizar.email(tfdEmail, true)
                || Automatizar.telefone(tffTelefone, false));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBuscar;
    private javax.swing.JButton BtnEditar;
    private javax.swing.JButton BtnExcluir;
    private javax.swing.JButton BtnFechar;
    private javax.swing.JButton BtnSalvar;
    private javax.swing.JTabbedPane TbpPessoa;
    private javax.swing.JTextField TxtFiltroApelido;
    private javax.swing.JTextField TxtFiltroNome;
    private javax.swing.JButton btnLiparFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPessoa;
    private javax.swing.JTextField tfdApelido;
    private javax.swing.JTextField tfdEmail;
    private javax.swing.JTextField tfdNome;
    private javax.swing.JFormattedTextField tffTelefone;
    // End of variables declaration//GEN-END:variables
}
